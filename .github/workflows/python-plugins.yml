# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test plugins

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "*" ]
    types:
    - labeled
    - opened
    - synchronize
    - reopened


jobs:
  build:
    if: contains( github.event.pull_request.labels.*.name, 'test-plugins')

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        plugin-name:
        - integral
        - integral-all-sky
        - antares
        - gw
        - legacysurvey
        - nb2workflow
        # - polar

    services:
      antares-backend:
        image: densavchenko/antares:gittest
        ports: 
        - 5002:8000

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}


    - name: Clone ${{ matrix.plugin-name }} plugin 
      uses: actions/checkout@v2
      with:
        repository: 'oda-hub/dispatcher-plugin-${{matrix.plugin-name}}'
        path: plugin   


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip flake8 pytest mypy pylint pytest-cov wheel
        
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .[test]

        if [ -f plugin/requirements.txt ]; then 
          < plugin/requirements.txt grep -v oda-hub/dispatcher-app | grep -v cdci-data-analysis | grep -v oda_api > plugin-req.txt
          pip install -r plugin-req.txt; 
        fi        
        if [ -f plugin/test-requirements.txt ]; then 
          < plugin/test-requirements.txt grep -v oda-hub/dispatcher-app | grep -v cdci-data-analysis | grep -v oda_api > plugin-test-req.txt
          pip install -r plugin-test-req.txt; 
        fi        
        pip install -e  ./plugin[test]
        curl -o tests/oda-ontology.ttl https://raw.githubusercontent.com/oda-hub/ontology/ecdf2a61f87aac13ae7a96c0f3dad960312adae4/ontology.ttl
    
    - name: Test ${{ matrix.plugin-name }} plugin with pytest
      env: 
        ODA_ONTOLOGY_PATH: ../tests/oda-ontology.ttl
      run: |
        cd plugin && DISPATCHER_MOCK_KB=yes python -m pytest tests -sv --full-trace --log-cli-level=DEBUG 
    
