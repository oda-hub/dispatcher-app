# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test container, integrating plugins

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "*" ]
    types:
    - labeled
    - opened
    - synchronize
    - reopened


jobs:
  build:
    if: contains( github.event.pull_request.labels.*.name, 'test-container')

    runs-on: ubuntu-latest

        # - integral
        # - integral-all-sky
        # - antares
        # - gw
        # - legacysurvey
        # - nb2workflow
        # - polar

    services:
      antares-backend:
        image: densavchenko/antares:gittest
        ports: 
        - 5002:8000

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    

      # https://raw.githubusercontent.com/oda-hub/dispatcher-container/master/requirements.txt


    # TODO: build the container instead
    - name: Install dependencies
      run: |      
        python -m pip install --upgrade pip flake8 pytest mypy pylint pytest-cov wheel
        
        pip install -r https://raw.githubusercontent.com/oda-hub/dispatcher-container/master/requirements.txt

        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi      

        pip install -e .[test]

        for plugin in integral integral-all-sky antares gw legacysurvey nb2workflow; do
          git clone https://github.com/oda-hub/dispatcher-plugin-$plugin plugin-$plugin
          if [ -f plugin-$plugin/requirements.txt ]; then 
            < plugin-$plugin/requirements.txt grep -v oda-hub/dispatcher-app | grep -v cdci-data-analysis | grep -v oda_api > plugin-req-$plugin.txt
            pip install -r plugin-req-$plugin.txt; 
          fi        
          pip install -e  ./plugin-$plugin[test]
        done
       
    
    - name: Test ${{ matrix.plugin-name }} plugin with pytest
      run: |
        set -x
        export DISPATCHER_MOCK_KB=yes
        for plugin in integral integral-all-sky antares gw legacysurvey nb2workflow; do
          (
            cd plugin-$plugin
            python -m pytest tests -sv --full-trace --log-cli-level=DEBUG -k 'not test_no_debug_mode_empty_request and not test_empty_request'
          )
        done
    
